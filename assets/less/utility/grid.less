// Grid
.grid {
  font-size: 0;

  &:before,
  &:after {
    display: table;
    content: '';
    clear: both;
  }

  [class^=col-] {
    vertical-align: top;
  }
}

.grid--padHorizontal {
  margin-left: -@grid-space;

  > [class^=col-] {
    padding-left: @grid-space;
  }
}

.grid--padVertical {
  > [class^=col-] {
    padding-bottom: @grid-space;
  }
}

.grid--pad {
  &:extend(.grid--padHorizontal all);
  &:extend(.grid--padVertical all);
}

.grid--alignMiddle {
  [class^=col-] {
    vertical-align: middle;
  }
}

[class^=col-] {
  font-size: @base-font-size;
  box-sizing: border-box;
  display: inline-block;
  width: 100%;
}

// Columns
.create-sizes(@grid-columns);

@media @mq-sm {
  .create-sizes(@grid-columns, -sm);
}

@media @mq-md {
  .create-sizes(@grid-columns, -md);
}

@media @mq-lg {
  .create-sizes(@grid-columns, -lg);
}

@media @mq-xl {
  .create-sizes(@grid-columns, -xl);
}

// Create a size class
.size(@x, @y, @prefix: ~'') when (@x < @y){
  .col@{prefix}-@{x}of@{y} when not (@x = @y) {
    @w: (100/@y)*@x;
    width: ~"@{w}%";
  }
}

// Create sizes
.create-sizes(@a, @prefix: ~'', @x: 1) when (@x <= @a) {
  .inner-loop(@b, @y: 1) when (@y <= @b) {
    .size(@x, @y, @prefix);
    .inner-loop(@b, (@y + 1));
  }
  .inner-loop(@a);
  .create-sizes(@a, @prefix, (@x + 1));
}
